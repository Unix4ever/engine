<template>
  <detachable-window name="main" :detached="self.detachMain">
    <button v-on:click="self.detachMain = not self.detachMain">{{if self.detachMain then return 'attach' else return 'detach' end}}</button>
    <same-line spacing="1"/>
    <button v-on:click="self:loadTestModel()">model</button>
    <same-line spacing="1"/>
    <button v-on:click="self:openWindow()">test window</button>
  </detachable-window>
</template>

<script>
  local name = "test"
  local async = require 'lib.async'
  return ImVue.new({
    loadTestModel = function(self)
      cfg = core:render().config
      cfg.resources = {
        workdir = getResourcePath(""),
        Sinbad = {
          "FileSystem;bundles/models/v2/packs/Sinbad",
        }
      }
      cfg.settings = {
        render = {
          ambientLight ={
            lowerHemisphere = "0x337F7FFF",
            upperHemisphere = "0xFF7F7FFF"
          },
          colourBackground = "0xc0c0cFF",
          colourAmbient = "0x7F7F7FFF",
          colourDiffuse = "0xc0c0c0FF"
        }
      }
      core:configureSystem("render", cfg, false)
      data:createEntity({
        render = {
          root = {
            children = {
              {
                type = 'model',
                mesh = 'Sinbad.mesh'
              }
            }
          }
        }
      })
      data:createEntity({
        id= "lamp",
        render= {
          root= {
            position= "-50,10,-40",
            rotation= "0.570947,0.169076,0.755880,-0.272171",
            name= "lamp",
            children= {{
              type= "light",
              colourSpecular= "0xaaaaaaff",
              name= "lamp",
              castShadows= true,
              colourShadow= "0x66666666",
              colourDiffuse= "0xFFFFFFFF",
              lightType= "directional",
              direction= "-1, -1, -1",
              powerScale= 4
            }}
          }
        }
      })
      local c = camera:create('free', 'test', {})
      c:setEnabled(true)
      c:attach('Game')
    end,
    openWindow = function(self)
      local wm = game:getWindowManager()
      local window = wm:createWindow("testoway", 1024, 768, false, {
        resizable = true,
        highDPI = true,
      })
      print(window)

      local params = {
        autoUpdated = true,
        useWindowManager = true,
        workspaceName = "layer",
        params=
        {
          FSAA=0,
          displayFrequency=50,
          vsync=false,
          gamma="true"
        }
      }

      local rt = core:render():createRenderTarget(name, RenderTarget.Window, params, window)
      local ctx = imvue:getContext(name)
      ctx:addDocument("app", "editor/imvue/app.xml")
      async.callLater(5, function()
        print(pcall(function()
          wm:destroyWindow(window)
          window = nil
        end))
      end)
    end,
    data = function()
      return {
        detachMain = false
      }
    end

  })
</script>
